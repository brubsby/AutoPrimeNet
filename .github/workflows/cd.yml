name: CD

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - 'autoprimenet.py'
  schedule:
    - cron:  '0 0 1 * *'
  workflow_dispatch:

jobs:
  PyInstaller:
    name: AutoPrimeNet Windows PyInstaller

    runs-on: windows-latest
    strategy:
      matrix:
        architecture: ["x86", "x64"]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        architecture: ${{ matrix.architecture }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install requests pyinstaller
    - name: Script
      run: |
        python -X dev autoprimenet.py --help
        curl -sSO https://www.mersenne.org/favicon.ico
        pyinstaller -F -i favicon.ico --optimize 2 autoprimenet.py
        .\dist\autoprimenet --help
    - uses: actions/upload-artifact@v4
      with:
        name: AutoPrimeNet_Windows_${{ matrix.architecture }}
        path: |
          README.md
          LICENSE
          dist/*

  deploy:
    name: AutoPrimeNet Windows Deploy
    needs: PyInstaller

    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
    - name: Install
      run: |
        sudo apt-get update -y
        sudo apt-get install -y lftp
    - name: Script
      run: |
        set -x
        ls -alR AutoPrimeNet_Windows_*
        for DIR in AutoPrimeNet_Windows_*/; do (cd "$DIR"; zip -j "../${DIR%/}" -- README.md LICENSE dist/*); done
        ls -alR AutoPrimeNet_Windows_*
        lftp -u "${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }}" -e "set ssl:verify-certificate false; mput AutoPrimeNet_Windows_*.zip; exit" download.mersenne.ca
